# Класс - это некая конструкция, которая связывает или объединяет
# определенное количество переменных и определенное количество функций.

# На основе класса создаются объекты.

# Класс - некий шаблон, на основе которого затем "по образу и подобию"
# создаются объекты

# В Python объектом является не только то, что мы создаем
# на основе класса, но и сам класс является объектом.

# Тот объект, который создается на основе класса, мы будем называть
# экземпляром класса. Тот объект, через который реализуется
# класс, будем называть объектом класса.

# Как описать класс?
class Employee:
    # тело класса
    def __init__(self):
        pass

# Что пишут в теле класса? Описывают методы.
# Метод - это та же функция, только вызываться она будет из
# экземпляра класса.

# При описании метода экземпляр класса, из которого будет вызываться
# метод, должен быть указан ЯВНО как первый аргумент метода.

class MyClass:
# Ме тод экз емпляра кла с с а .
# Един с т в енный ар гумент ме тода s e l f - с сылка
# на э кземпляр клас с а , из которого вызыв а е т с я
# метод
    def sayHello(self):
    # Ме тодом о т обража е т с я сообще ние . Ар гумент
    # ме тода ( с сылка s e l f ) явно не испол ь з уе т ся
        print('Bac приветствует экземпляр класса!')
# Со здаем экземпляр кла с с а
obj = MyClass()
# Вызыв аем ме тод экземпляра кла с с а .
# При вызове аргументы методу не передаются
obj.sayHello()


# Как на основе класса создать экземпляр класса?

