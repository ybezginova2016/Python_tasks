import numpy as np

# Bот, например, нулевая матрица. У неё нет обратной,
# потому что ни одно число не даёт единицу в произведении
# с нулём. Попробуй ввести такую матрицу в коде и попросить
# вычислить обратную

# a = np.array([
#     [0, 0],
#     [0, 0]
# ])
# b = np.linalg.inv(a)
# print(b)

# Traceback (most recent call last):
#   File "main.py", line 8, in <module>
#     b = np.linalg.inv(a)
# numpy.linalg.LinAlgError: Singular matrix

import numpy as np

a = np.array([
    [2, 3],
    [3, 2]
])
b = np.linalg.inv(a)
print(b)

# import numpy as np
#
# c = np.array([
#     [1, 2],
#     [3, 6]
# ])
# d = np.linalg.inv(c)
# print(d)
# numpy.linalg.LinAlgError: Singular matrix

# Матрицы, состоящие из линейно-зависимых (коллинеарных) векторов,
# всегда вырожденные. Если векторы коллинеарны, из них получится
# вырожденная матрица.

# Определитель вырожденной матрицы = 0

# Если матрица линейного преобразования вырожденная, она переводит
# векторы пространства в его подпространство меньшей размерности.

import numpy as np

r = np.array([
    [-8, 22, 6],
    [4, 7, 11],
    [-12, 15, -5]
])
det_r = np.linalg.det(r)
print("Определитель матрицы R:")

print(det_r.round()) # Округление определителя до целых.

q = np.array([
    [1, -8, 34, 5],
    [6, -9, 3, 8],
    [1.5, -12, 51, 7.5],
    [0, 17, -4, 2]
])
det_q = np.linalg.det(q)
print("Определитель матрицы Q:")
print(det_q.round()) # Округление определителя до целых.
b = np.array([
        [7, -9, 2, 5, 3],
        [4, 7, 11, -5, 1],
        [9, 34, -2, 0, 4],
        [-2, 5, 17, 9, -2],
        [-8, 11, 0, 31, 7],
])
det_b = np.linalg.det(b)
print("Определитель матрицы B:")
print(det_b.round()) # Округление определителя до целых.

# Вырожденные матрицы — это R и Q.

import numpy as np

k = np.array([[3, 0, 9],
  [8, 6, 1],
  [0, 4, 2]])

l = np.array([[1, -7, 3],
 [5, 0, 15],
 [-4, -25, -12]])

y = np.array([[1, -8, 3, -4],
  [8, 6, -9, 5],
  [-11, 3, 8, 0],
  [29, -15, 3, 17]])

m = np.array([[1, -0.6, 9, 13, 6],
  [8, -3, 28, 11, 6],
  [0, -7, 34, 8, 2],
  [9, 1, -5, 2, 6],
  [7, 2, -5, 3, 1]])

det_k = np.linalg.det(k)
print("Определитель матрицы K:")
print(det_k.round()) # Округление определителя до целых.

det_l = np.linalg.det(l)
print("Определитель матрицы L:")
print(det_l.round()) # Округление определителя до целых.

det_y = np.linalg.det(y)
print("Определитель матрицы Y:")
print(det_y.round()) # Округление определителя до целых.

det_m = np.linalg.det(m)
print("Определитель матрицы M:")
print(det_m.round()) # Округление определителя до целых.