# Упражнение 2
# Найдите параметры линейной регрессии по данным Макса с помощью
# градиентного спуска. Для этого создайте функцию для подсчёта
# ошибки f и функцию для подсчёта градиента grad.

# Подберите такие
# параметры скорости gamma и точности ε метода, чтобы итоговое
# значение функции ошибки было ниже 2.4. Сохраните вектор
# найденных весов в переменной w. Выведите финальное значение
# функции ошибки и полученные коэффициенты прямой.

import numpy as np
import matplotlib.pyplot as plt

x = np.array([0., 1., 2., 3., 4., 5., 6., 7., 8., 0., 1., 2., 3., 4., 5., 6., 7.,
       8., 0., 1., 2., 3., 4., 5., 6., 7., 8., 0., 1., 2., 3., 4., 5., 6.,
       7., 8., 0., 1., 2., 3., 4., 5., 6., 7., 8., 0., 1., 2., 3., 4.])

y = np.array([ 9. ,  7.5,  7.5, 10. ,  5.5,  7.5,  8.5,  5. ,  5.5,  5. ,  7. ,
        8.5,  8.5,  5. ,  6.5,  8.5,  3.5,  3. ,  5.5,  6. ,  7. ,  7. ,
        5.5,  6. ,  8.5,  7. ,  6. ,  6. ,  8. , 10. ,  7. ,  6. ,  4.5,
        6.5,  4.5,  6.5,  7. ,  8.5,  6. ,  6.5,  9.5,  8. ,  8. ,  5. ,
        3.5,  6. ,  9. ,  6.5,  5.5,  8. ])

# Creating a matrix X
X = np.stack([x, np.ones(len(x))], axis=1)
# print(X)

# Рассчитываем коэффициенты прямой по формуле.
# w - вектор коэффициентов [k, m].
w = np.linalg.inv(X.T @ X) @ X.T @ y

# Функция потерь.
def f(X, y, w):
    return np.linalg.norm(X @ w - y) ** 2 / len(X)

# Градиент функции потерь.
def grad(X, y, w):
    return 2 * X.T @ (X @ w - y) / len(X)

# Коэффициент размера шага.
gamma = 1e-2

# Обновляем веса.
# w = w - gamma * grad(X, y, w)

# Печатаем обновлённые значения и строим график.
print('w:', w)
print('MSE:', f(X, y, w))
print('Gradient:', grad(X, y, w))

# Код для построения графика, можно не менять.
plt.figure(figsize=(8, 6))
plt.scatter(X[:, 0], y, s=100)

x_min, x_max = x.min() - 1, x.max() + 1
plt.xlim(x_min, x_max)

y_min, y_max = 0, 11
plt.ylim(y_min, y_max)

y_min_line = x_min * w[0] + w[1]
y_max_line = x_max * w[0] + w[1]

plt.plot(
    [x_min, x_max],
    [y_min_line, y_max_line],
    linewidth=3,
    c="C1",
)

plt.xlabel("$x$", fontsize=15)
plt.ylabel("$y$", fontsize=15, rotation=0, labelpad=15)

plt.grid()
plt.show()