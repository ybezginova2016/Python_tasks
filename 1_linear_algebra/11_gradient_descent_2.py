# Упражнение 2
# Найдите параметры линейной регрессии по данным Макса с помощью
# градиентного спуска. Для этого создайте функцию для подсчёта
# ошибки f и функцию для подсчёта градиента grad. Подберите такие
# параметры скорости gamma и точности ε метода, чтобы итоговое
# значение функции ошибки было ниже 2.4. Сохраните вектор
# найденных весов в переменной w. Выведите финальное значение
# функции ошибки и полученные коэффициенты прямой.

import numpy as np

x = np.array([0., 1., 2., 3., 4., 5., 6., 7., 8., 0., 1., 2., 3., 4., 5., 6., 7.,
       8., 0., 1., 2., 3., 4., 5., 6., 7., 8., 0., 1., 2., 3., 4., 5., 6.,
       7., 8., 0., 1., 2., 3., 4., 5., 6., 7., 8., 0., 1., 2., 3., 4.])
y = np.array([ 9. ,  7.5,  7.5, 10. ,  5.5,  7.5,  8.5,  5. ,  5.5,  5. ,  7. ,
        8.5,  8.5,  5. ,  6.5,  8.5,  3.5,  3. ,  5.5,  6. ,  7. ,  7. ,
        5.5,  6. ,  8.5,  7. ,  6. ,  6. ,  8. , 10. ,  7. ,  6. ,  4.5,
        6.5,  4.5,  6.5,  7. ,  8.5,  6. ,  6.5,  9.5,  8. ,  8. ,  5. ,
        3.5,  6. ,  9. ,  6.5,  5.5,  8. ])


# Функция потерь.
def mse(X, y, w):
    return np.linalg.norm(X @ w - y) ** 2 / len(X)

# Градиент функции потерь.
def grad(X, y, w):
    return 2 * X.T @ (X @ w - y) / len(X)

# Начальные значения параметров.
w = np.array([-1, 5])

# Коэффициент размера шага.
gamma = 1e-2